# .zlogin file
#
# Executed at the start of a ZSH session.

# Reconnect tmux session
if [[ "$SSH_CONNECTION" != "" && "$MY_SSH_CONNECTION" != "yes" ]]; then
    while true; do
        echo -n "Do you want to attach to a tmux session? [y/n]"
        read yn
        case $yn in
            [Yy]* ) MY_SSH_CONNECTION="yes" tmux attach; break;;
            [Nn]* ) break;;
            * ) echo "Please answer y/n";;
        esac
    done
fi

# Launch Neofetch on shell login.
local NEOFETCH="/usr/local/bin/neofetch"
local NEOFETCH_ARTWORK="/$HOME/.misc/iTerm2/AppleLogo.png"
# Make sure Neofetch exists.
if [[ -e $NEOFETCH ]]; then
    # Now check
    if [[ $TERM_PROGRAM = "iTerm.app" ]]; then
        $NEOFETCH --iterm2 $NEOFETCH_ARTWORK
    elif [[ $TERM_PROGRAM = "Apple_Terminal" ]]; then
        $NEOFETCH
    else
        # Note sure if this is needed.
        break
    fi

fi

###         ###
### TESTING ###
###         ###

# Test:
#for tmux: export 256color
#[ -n "$TMUX" ] && export TERM=xterm-256color

# Run Startup App
# Launch tmux at startup.
# If not running interactively, do not do anything.
#[[ $- != *i* ]] && return
#[[ -z "$TMUX" ]] && exec tmux

#if which tmux > /dev/null 2>&1; then
    # if no session is started, start a new session
#    test -z ${TMUX} && tmux;
    
    # when quitting tmux, try to attach
#    while test -z ${TMUX}; do 
#        tmux attach || break
#    done
#fi

#if [ "$PS1" ]; then            # Checks for $PS1 before executing any apps
#	if [ -z "$STY" ]; then      # Checks to see if $STY is running
#    	exec screen -dR         # If PS1 is present and STY is not running, run app
#	fi
#fi


# EOF
